// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ApiProyecto.Models;

namespace ApiProyecto.DataAccess
{
    public partial class ProyectoMFEContext : DbContext
    {
        public ProyectoMFEContext()
        {
        }

        public ProyectoMFEContext(DbContextOptions<ProyectoMFEContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Categorias> Categorias { get; set; }
        public virtual DbSet<Dispositivos> Dispositivos { get; set; }
        public virtual DbSet<HistoricoSolicitudes> HistoricoSolicitudes { get; set; }
        public virtual DbSet<HwRed> HwRed { get; set; }
        public virtual DbSet<Ordenadores> Ordenadores { get; set; }
        public virtual DbSet<Pantallas> Pantallas { get; set; }
        public virtual DbSet<Solicitudes> Solicitudes { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Categorias>(entity =>
            {
                entity.HasKey(e => e.IdCategoria);

                entity.ToTable("CATEGORIAS");

                entity.Property(e => e.IdCategoria).HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("NOMBRE");
            });

            modelBuilder.Entity<Dispositivos>(entity =>
            {
                entity.HasKey(e => e.NumSerie);

                entity.ToTable("DISPOSITIVOS");

                entity.Property(e => e.NumSerie)
                    .HasMaxLength(20)
                    .HasColumnName("NUM_SERIE");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.IdCategoria).HasColumnName("ID_CATEGORIA");

                entity.Property(e => e.Localizacion)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("LOCALIZACION");

                entity.Property(e => e.Marca)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("MARCA");

                entity.Property(e => e.Modelo)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasColumnName("MODELO");

                entity.HasOne(d => d.IdCategoriaNavigation)
                    .WithMany(p => p.Dispositivos)
                    .HasForeignKey(d => d.IdCategoria)
                    .HasConstraintName("DISPOSITIVOS_fk0");
            });

            modelBuilder.Entity<HistoricoSolicitudes>(entity =>
            {
                entity.HasKey(e => new { e.NumSerie, e.IdUsuario, e.Fecha });

                entity.ToTable("HISTORICO_SOLICITUDES");

                entity.Property(e => e.NumSerie)
                    .HasMaxLength(20)
                    .HasColumnName("NUM_SERIE");

                entity.Property(e => e.IdUsuario).HasColumnName("ID_USUARIO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.Ultimatum)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ULTIMATUM")
                    .IsFixedLength();
            });

            modelBuilder.Entity<HwRed>(entity =>
            {
                entity.HasKey(e => e.NumSerie);

                entity.ToTable("HW_RED");

                entity.Property(e => e.NumSerie)
                    .HasMaxLength(20)
                    .HasColumnName("NUM_SERIE");

                entity.Property(e => e.NumPuertos).HasColumnName("NUM_PUERTOS");

                entity.Property(e => e.Velocidad).HasColumnName("VELOCIDAD");

                entity.HasOne(d => d.NumSerieNavigation)
                    .WithOne(p => p.HwRed)
                    .HasForeignKey<HwRed>(d => d.NumSerie)
                    .HasConstraintName("HW_RED_fk0");
            });

            modelBuilder.Entity<Ordenadores>(entity =>
            {
                entity.HasKey(e => e.NumSerie);

                entity.ToTable("ORDENADORES");

                entity.Property(e => e.NumSerie)
                    .HasMaxLength(20)
                    .HasColumnName("NUM_SERIE");

                entity.Property(e => e.DiscoPrincipal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("DISCO_PRINCIPAL");

                entity.Property(e => e.DiscoSecundario)
                    .HasMaxLength(15)
                    .HasColumnName("DISCO_SECUNDARIO");

                entity.Property(e => e.Procesador)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("PROCESADOR");

                entity.Property(e => e.Ram)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("RAM");

                entity.HasOne(d => d.NumSerieNavigation)
                    .WithOne(p => p.Ordenadores)
                    .HasForeignKey<Ordenadores>(d => d.NumSerie)
                    .HasConstraintName("ORDENADORES_fk0");
            });

            modelBuilder.Entity<Pantallas>(entity =>
            {
                entity.HasKey(e => e.NumSerie);

                entity.ToTable("PANTALLAS");

                entity.Property(e => e.NumSerie)
                    .HasMaxLength(20)
                    .HasColumnName("NUM_SERIE");

                entity.Property(e => e.Pulgadas).HasColumnName("PULGADAS");

                entity.HasOne(d => d.NumSerieNavigation)
                    .WithOne(p => p.Pantallas)
                    .HasForeignKey<Pantallas>(d => d.NumSerie)
                    .HasConstraintName("PANTALLAS_fk0");
            });

            modelBuilder.Entity<Solicitudes>(entity =>
            {
                entity.HasKey(e => new { e.NumSerie, e.IdUsuario });

                entity.ToTable("SOLICITUDES");

                entity.Property(e => e.NumSerie)
                    .HasMaxLength(20)
                    .HasColumnName("NUM_SERIE");

                entity.Property(e => e.IdUsuario).HasColumnName("ID_USUARIO");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

               entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithMany(p => p.Solicitudes)
                    .HasForeignKey(d => d.IdUsuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("SOLICITUDES_fk1");
              
                entity.HasOne(d => d.NumSerieNavigation)
                    .WithMany(p => p.Solicitudes)
                    .HasForeignKey(d => d.NumSerie)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("SOLICITUDES_fk0");
            });

            modelBuilder.Entity<Usuarios>(entity =>
            {
                entity.HasKey(e => e.IdUsuario);

                entity.ToTable("USUARIOS");

                entity.HasIndex(e => e.Correo, "UQ__USUARIOS__264F33C8BC714F5F")
                    .IsUnique();

                entity.Property(e => e.IdUsuario).HasColumnName("ID_USUARIO");

                entity.Property(e => e.Contrasenia)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("CONTRASENIA");

                entity.Property(e => e.Correo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasColumnName("CORREO");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasColumnName("NOMBRE");

                entity.Property(e => e.PrimerApellido)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasColumnName("PRIMER_APELLIDO");

                entity.Property(e => e.SegundoApellido)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasColumnName("SEGUNDO_APELLIDO");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}